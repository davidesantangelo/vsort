name: Windows Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
    
    - name: Check CMake version
      run: cmake --version
    
    - name: Configure CMake for Windows
      # Configure CMake with MSVC specific flags for Windows
      # Added CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=TRUE to fix DLL exports
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=cl
        -DCMAKE_C_COMPILER=cl
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=TRUE
        -DBUILD_SHARED_LIBS=ON
        -DCMAKE_C_FLAGS="/O2 /Ot /GL /wd4255 /wd4013 /EHsc"
        -DCMAKE_CXX_FLAGS="/O2 /Ot /GL /wd4255 /wd4013 /EHsc"
        -S ${{ github.workspace }}

    - name: Build
      # Simplified build command with verbosity
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release 

    - name: List Build Directory 
      shell: cmd
      run: dir /s ${{ steps.strings.outputs.build-output-dir }}
    
    - name: Debug Build Output
      shell: pwsh
      run: |
        Get-ChildItem -Recurse -Include *.lib,*.dll,*.exe -Path ${{ steps.strings.outputs.build-output-dir }}

    - name: Run Tests
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config Release --output-on-failure
